rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is the owner of a document.
    function isOwner() {
      return request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    function isReadingOwnData(userId) {
        return request.auth != null && request.auth.uid == userId;
    }

    // Rules for the 'clients' collection
    match /clients/{clientId} {
      // Allow create if the user is authenticated and is the owner.
      allow create: if isOwner();
      // Allow read, delete if the user is the owner of the document.
      allow read, delete: if isReadingOwnData(resource.data.userId);
    }

    // Rules for the 'savedLeads' collection
    match /savedLeads/{leadId} {
        // Allow create if the user is authenticated, the owner, and provides a timestamp.
        allow create: if isOwner() && request.resource.data.createdAt == request.time;
        // Allow read and delete if the user is the owner.
        allow read, delete: if isReadingOwnData(resource.data.userId);
    }
    
    // Rules for the 'blogPosts' collection
    match /blogPosts/{postId} {
        // Allow create if the user is authenticated and is the owner.
        allow create: if isOwner();
        // Allow read if the user is the owner.
        allow read: if isReadingOwnData(resource.data.userId);
    }
  }
}
